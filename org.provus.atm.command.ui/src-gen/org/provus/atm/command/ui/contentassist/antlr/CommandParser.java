/*
* generated by Xtext
*/
package org.provus.atm.command.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.provus.atm.command.services.CommandGrammarAccess;

public class CommandParser extends AbstractContentAssistParser {
	
	@Inject
	private CommandGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.provus.atm.command.ui.contentassist.antlr.internal.InternalCommandParser createParser() {
		org.provus.atm.command.ui.contentassist.antlr.internal.InternalCommandParser result = new org.provus.atm.command.ui.contentassist.antlr.internal.InternalCommandParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getCommandAccess().getAlternatives(), "rule__Command__Alternatives");
					put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
					put(grammarAccess.getENCAccess().getGroup(), "rule__ENC__Group__0");
					put(grammarAccess.getPASSAccess().getGroup(), "rule__PASS__Group__0");
					put(grammarAccess.getUSERAccess().getGroup(), "rule__USER__Group__0");
					put(grammarAccess.getModelAccess().getCommandsAssignment_1_0(), "rule__Model__CommandsAssignment_1_0");
					put(grammarAccess.getModelAccess().getCommandsAssignment_1_1(), "rule__Model__CommandsAssignment_1_1");
					put(grammarAccess.getModelAccess().getCommandsAssignment_1_2(), "rule__Model__CommandsAssignment_1_2");
					put(grammarAccess.getENCAccess().getPassAssignment_3(), "rule__ENC__PassAssignment_3");
					put(grammarAccess.getPASSAccess().getPassAssignment_3(), "rule__PASS__PassAssignment_3");
					put(grammarAccess.getUSERAccess().getUserAssignment_3(), "rule__USER__UserAssignment_3");
					put(grammarAccess.getModelAccess().getUnorderedGroup_1(), "rule__Model__UnorderedGroup_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.provus.atm.command.ui.contentassist.antlr.internal.InternalCommandParser typedParser = (org.provus.atm.command.ui.contentassist.antlr.internal.InternalCommandParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public CommandGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(CommandGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
